
Let us see the following equation,

                                            ax+by=c

Given three positive integers a, b and c. You have to determine whether there exists at least one solution for some integers value of x and y where x, y may be negative or non-negative integers.

For example if a=2, b=4 and c=8 then the equation will be 2x+4y=8, and hence, for x=2 and y=1, there exists a solution.

Let us see another example for a=3, b=6 and c=7, so the equation will become 3x+6y=7 and there exists no solution satisfying this equation.

Input

Input starts with an integer T (1<=T<=105) denoting the number of test cases. Each test case contains three integers a, b, and c. (1<=a, b, c<=106).

Output

For each test case of input print the case number and “Yes” if there exists at least one solution, print “No” otherwise.

Sample Input

Output for Sample Input

2
2 4 8
3 6 7

Case 1: Yes
Case 2: No



#include <iostream>
using namespace std;

// Function to calculate the GCD (Greatest Common Divisor) of two numbers
int gcd(int a, int b) {
    if(b == 0) return a;
    return gcd(b, a % b);
}

// Function to solve each test case
void solve(int case_num) {
    int a, b, c, g;
    cin >> a >> b >> c;

    // Calculate GCD of a and b
    g = gcd(a, b);

    // Check if c is divisible by the GCD of a and b
    if(c % g == 0) {
        // Print "Yes" if a solution exists
        cout << "Case " << case_num << ": Yes" << endl;
    } else {
        // Print "No" if no solution exists
        cout << "Case " << case_num << ": No" << endl;
    }
}

int main() {
    int t;  // Number of test cases
    cin >> t;  // Input the number of test cases

    // Loop through each test case
    for(int i = 1; i <= t; i++) {
        solve(i);  // Call the solve function with the current case number
    }

    return 0;
}
