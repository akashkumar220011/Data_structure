Given an array A[ ] of N numbers, your task is to find LCM of it modulo 1000000007

Example 1:

Input:
N = 4
A = {1 , 2 , 8 , 3}
Output:
24
Explanation:
LCM of the given array is 24.
24 % 1000000007 = 24
Example 2:

Input:
N = 2
A = {1 , 8}
Output:
8
Explanation:
LCM of the given array is 8.
Your Task:
You don't need to read input or print anything. Your task is to complete the function lcmOfArray() which takes an Integer N and an Array A as input and returns the answer.

Expected Time Complexity: O(N*log(N))
Expected Auxiliary Space: O(1)

Constraints:
1 <= N <= 105
1 <= A[i] <= 10




class Solution {
    // Helper function to calculate GCD of two numbers
    static int gcd(int a, int b) {
        if (b == 0)
            return a;
        return gcd(b, a % b);
    }

    // Function to find LCM of an array
    static long lcmOfArray(int N, int A[]) {
        long M = 1000000007L;  // Large prime modulus
        long lcm = A[0];  // Start with the first element
        
        for (int i = 1; i < N; i++) {
            // Calculate LCM using the formula: LCM(a, b) = (a * b) / GCD(a, b)
            lcm = (lcm * A[i]) / gcd((int) lcm, A[i]);
            
            // Apply modulo M to keep the result within limits
            lcm %= M;
        }
        
        return lcm;
    }
}