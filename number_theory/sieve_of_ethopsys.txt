
TDKPRIME - Finding the Kth Prime
#sieve-of-eratosthenes
The problem statement is really simple. There are some queries. You are to give the answers.

Input
An integer stating the number of queries Q(equal to 50000), and Q lines follow, each containing one integer K between 1 and 5000000 inclusive.

Output
Q lines with the answer of each query: the Kth prime number.

Example
Input:
7
1
10
100
1000
10000
100000
1000000

Output:
2
29
541
7919
104729
1299709
15485863


code:--

#include <bits/stdc++.h>
using namespace std;
const int N = 86028121;
bool arr_prime[N+1];
vector<int> vec_primes;

void sieve(){
  for(int i = 2; i<N+1; i++)
    arr_prime[i] = true;

  for(int i=2; i*i<=N; i++){
    if(arr_prime[i]){
      for(int j = i*i; j<=N; j+=i){
        arr_prime[j]= false;
      }
    }
  }
  vec_primes.push_back(0);
  for(int i = 2; i<N+1; i++){
    if(arr_prime[i]){
      vec_primes.push_back(i);
    }
  }
}

void solve(){
  int k ; 
  cin>>k;
  cout<< vec_primes[k]<<endl;
}

int main() {
  // your code goes here
  int t = 1;
  cin>> t;
  sieve();
  while(t--){
    solve();
  }
  return 0;
}